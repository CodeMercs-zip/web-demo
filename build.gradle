buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.flywaydb:flyway-gradle-plugin:10.20.1"
        classpath "org.flywaydb:flyway-database-postgresql:10.20.1"
    }
}

plugins {
    id 'java'
	id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '10.20.1'
}

group = 'com.rgs'
version = '0.0.2'

jar.enabled = false

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://repo.spring.io/milestone' }
    maven { url = 'https://repo.spring.io/snapshot' }
}

dependencies {
	
	implementation 'org.mybatis:mybatis:3.5.15'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.testcontainers:postgresql'

    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

}


flyway {
    url = project.findProperty("flywayUrl") ?: "jdbc:postgresql://localhost:5432/devdb"  // devdb로 변경
    user = project.findProperty("flywayUser") ?: "devuser"  // devuser로 변경
    password = project.findProperty("flywayPassword") ?: "devpass"  // devpass로 변경
    schemas = (project.findProperty("flywaySchemas") ?: "public").split(",")
    locations = ['classpath:db/migration']  // 추가
    encoding = 'UTF-8'  // 추가
    cleanDisabled = (project.findProperty("flywayCleanDisabled") ?: "false").toBoolean()
}


tasks.named('test') {
    useJUnitPlatform()
}
