spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: Kakao
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: http://localhost:17070/login/oauth2/code/kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_nickname
              - account_email
          google:
            client-name: Google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: http://localhost:17070/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
          naver:
            client-name: Naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: http://localhost:17070/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - email
              - profile
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
  datasource:
    url: jdbc:postgresql://localhost:5432/web_demo_db
    username: postgres
    password: 5908

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  flyway:
    clean-disabled: false
    baseline-on-migrate: true
    enabled: true
    locations: classpath:db/migration
    encoding: UTF-8
app:
  cors:
    allowed-origins:
      - "http://rgpsh.iptime.org:3000"
      - "http://rgpsh.iptime.org:4030"

# JWT 개발 환경 설정
jwt:
  secret: "DevSecretKeyForJwt123456789012345"
  accessTokenExpirationMs: 3600000
  refreshTokenExpirationMs: 2592000000

# 로깅 설정
logging:
  level:
    org.hibernate.SQL: DEBUG
    com.rgs.web_demo: DEBUG